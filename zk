#!/usr/bin/env bash

set -euo pipefail

# --- CONFIGURATION SOURCING ---

# 1. Define the default config file location based on XDG standards.
: "${XDG_CONFIG_HOME:="$HOME/.config"}"
DEFAULT_ZK_CONFIG_FILE="$XDG_CONFIG_HOME/zk/config.sh"

# 2. Determine the config file to use. Prioritize the ZK_CONFIG environment
#    variable if it is set by the user; otherwise, use the default path.
ZK_CONFIG_FILE="${ZK_CONFIG:-$DEFAULT_ZK_CONFIG_FILE}"

# 3. Source the user's configuration file if it exists at the determined path.
#    This allows user settings to be available before loading defaults.
if [ -f "$ZK_CONFIG_FILE" ]; then
    source "$ZK_CONFIG_FILE"
fi

# 4. Find the directory where the script is located to reliably source library files.
#    Resolve symlinks to get the actual script location.
ZK_SCRIPT_PATH="${BASH_SOURCE[0]}"
while [ -L "$ZK_SCRIPT_PATH" ]; do
    ZK_SCRIPT_DIR=$(cd -P -- "$(dirname -- "$ZK_SCRIPT_PATH")" &> /dev/null && pwd)
    ZK_SCRIPT_PATH=$(readlink "$ZK_SCRIPT_PATH")
    [[ "$ZK_SCRIPT_PATH" != /* ]] && ZK_SCRIPT_PATH="$ZK_SCRIPT_DIR/$ZK_SCRIPT_PATH"
done
ZK_SCRIPT_DIR=$(cd -P -- "$(dirname -- "$ZK_SCRIPT_PATH")" &> /dev/null && pwd)

# 5. Source the shared library of functions and variables.
#    Defaults are set here, but will not override user settings from config.sh
source "$ZK_SCRIPT_DIR/lib/libzk.sh"


# --- MAIN COMMAND ROUTER ---
COMMAND="${1:-find}"
shift || true

case "$COMMAND" in
    init)
        source "$ZK_SCRIPT_DIR/cmd/init.sh"
        cmd_init
        ;;
    add)
        _ensure_initialized
        source "$ZK_SCRIPT_DIR/cmd/add.sh"
        cmd_add "$@"
        ;;
    bookmark)
        _ensure_initialized
        source "$ZK_SCRIPT_DIR/cmd/bookmark.sh"
        cmd_bookmark
        ;;
    journal)
        _ensure_initialized
        source "$ZK_SCRIPT_DIR/cmd/journal.sh"
        cmd_journal
        ;;
    tags)
        _ensure_initialized
        source "$ZK_SCRIPT_DIR/cmd/tags.sh"
        cmd_tags
        ;;
    edit)
        _ensure_initialized
        source "$ZK_SCRIPT_DIR/cmd/edit.sh"
        cmd_edit
        ;;
    find)
        _ensure_initialized
        source "$ZK_SCRIPT_DIR/cmd/find.sh"
        cmd_find
        ;;
    query)
        _ensure_initialized
        source "$ZK_SCRIPT_DIR/cmd/query.sh"
        cmd_query "$@"
        ;;
    index)
        _ensure_initialized
        source "$ZK_SCRIPT_DIR/cmd/index.sh"
        cmd_index
        ;;
    backlinks)
        _ensure_initialized
        source "$ZK_SCRIPT_DIR/cmd/backlinks.sh"
        cmd_backlinks
        ;;
    completion)
        source "$ZK_SCRIPT_DIR/cmd/completion.sh"
        cmd_completion
        ;;
    help|--help|-h)
        source "$ZK_SCRIPT_DIR/cmd/help.sh"
        cmd_help
        ;;
    *)
        echo "Error: Unknown command '$COMMAND'" >&2
        source "$ZK_SCRIPT_DIR/cmd/help.sh"
        cmd_help
        exit 1
        ;;
esac